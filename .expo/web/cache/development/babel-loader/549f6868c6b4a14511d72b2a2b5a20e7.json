{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from \"expo\";\nimport * as Font from 'expo-font';\nimport { Asset } from \"expo-asset\";\nimport Toast from 'react-native-toast-message';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\nimport { Block, GalioProvider } from \"galio-framework\";\nimport config from \"./config\";\n\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, argonTheme } from \"./constants\";\nimport { SharedStateProvider } from \"./store/store\";\nimport 'expo-asset';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar assetImages = [Images.noData, Images.RemoteLogo];\n\narticles.map(function (article) {\n  return assetImages.push(article.image);\n});\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\nfunction myiOSPromptCallback(permission) {\n}\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n  var _super = _createSuper(App);\n  function App(props) {\n    var _this;\n    _classCallCheck(this, App);\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      expoPushToken: \"\"\n    };\n    _this._loadResourcesAsync = _asyncToGenerator(function* () {\n      return Promise.all(_toConsumableArray(cacheImages(assetImages)));\n    });\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n    _this._handleFinishLoading = function () {\n      _this.setState({\n        isLoadingComplete: true\n      });\n    };\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function () {\n      var _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'ArgonExtra': require(\"./assets/font/ArgonExtra.ttf\")\n        });\n        this.setState({\n          fontsLoaded: true\n        });\n      });\n      function loadFonts() {\n        return _loadFonts.apply(this, arguments);\n      }\n      return loadFonts;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(function* () {\n        yield this.loadFonts();\n      });\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fontsLoaded) {\n        return _jsxs(_Fragment, {\n          children: [_jsx(NavigationContainer, {\n            children: _jsx(GalioProvider, {\n              theme: argonTheme,\n              children: _jsx(SharedStateProvider, {\n                children: _jsx(Block, {\n                  flex: true,\n                  children: _jsx(Screens, {})\n                })\n              })\n            })\n          }), _jsx(Toast, {})]\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n  return App;\n}(React.Component);\nexport { App as default };","map":{"version":3,"names":["StatusBar","React","useState","AppLoading","Font","Asset","Toast","NavigationContainer","AsyncStorage","enableScreens","Block","GalioProvider","config","Screens","Images","articles","argonTheme","SharedStateProvider","assetImages","noData","RemoteLogo","map","article","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","myiOSPromptCallback","permission","App","props","state","fontsLoaded","expoPushToken","_loadResourcesAsync","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","setState","isLoadingComplete","loadAsync","require","loadFonts","Component"],"sources":["C:/Users/munya/OneDrive/Desktop/.EXE/app2/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from \"react\";\nimport { Image } from \"react-native\";\nimport { StyleSheet, Text, View } from 'react-native';\nimport { AppLoading } from \"expo\";\nimport * as Font from 'expo-font';\nimport { Asset } from \"expo-asset\";\nimport Toast from 'react-native-toast-message'\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// Before rendering any navigation stack\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\n\nimport { Block, GalioProvider } from \"galio-framework\";\n\nimport config from './config';\n\n\n//App Screens\nimport Screens from './navigation/Screens';\n\nimport { Images, articles, argonTheme } from './constants';\nimport { SharedStateProvider } from './store/store';\nimport 'expo-asset';\n\n\n\n// cache app images\nconst assetImages = [\n  Images.noData,\n  Images.RemoteLogo\n];\n\n// cache product images\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction myiOSPromptCallback(permission){\n  // do something with permission value\n}\n\n\nexport default class App extends React.Component {\n\n  state = {\n    fontsLoaded: false,\n    expoPushToken: \"\",\n  };  \n  \n  async loadFonts() {\n    await Font.loadAsync({\n      // Load a font `Montserrat` from a static resource\n      'ArgonExtra': require('./assets/font/ArgonExtra.ttf'),\n    });\n    this.setState({ fontsLoaded: true });\n  }\n  \n  \n\n  constructor(props) {\n    super(props);\n    \n  }\n\n  componentWillUnmount() {\n  }\n\n  async componentDidMount() {\n    await this.loadFonts();\n  }\n\n\n\n  render() {\n    if (this.state.fontsLoaded) {\n      return (\n        <>\n        <NavigationContainer>\n          <GalioProvider theme={argonTheme}>\n            <SharedStateProvider>\n              <Block flex>\n                <Screens />\n              </Block>\n            </SharedStateProvider>\n          </GalioProvider>\n        </NavigationContainer>\n        <Toast />\n        </>\n      );\n    }else{\n      return null;\n    }\n     \n    \n  }\n\n  _loadResourcesAsync = async () => {\n    return Promise.all([\n      ...cacheImages(assetImages),\n    ]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    this.setState({ isLoadingComplete: true });\n  };\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}