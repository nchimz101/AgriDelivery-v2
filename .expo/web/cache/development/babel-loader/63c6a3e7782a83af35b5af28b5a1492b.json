{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions, useNavigationState } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport debounce from \"../../utils/debounce\";\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport HeaderSegment from \"./HeaderSegment\";\nexport default React.memo(function Header(_ref) {\n  var back = _ref.back,\n    layout = _ref.layout,\n    progress = _ref.progress,\n    options = _ref.options,\n    route = _ref.route,\n    navigation = _ref.navigation,\n    styleInterpolator = _ref.styleInterpolator;\n  var insets = useSafeAreaInsets();\n  var previousTitle;\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n  var goBack = React.useCallback(debounce(function () {\n    if (navigation.isFocused() && navigation.canGoBack()) {\n      navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n        source: route.key\n      }));\n    }\n  }, 50), [navigation, route.key]);\n  var isModal = React.useContext(ModalPresentationContext);\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var isFirstRouteInParent = useNavigationState(function (state) {\n    return state.routes[0].key === route.key;\n  });\n  var statusBarHeight = options.headerStatusBarHeight !== undefined ? options.headerStatusBarHeight : isModal && !isFirstRouteInParent || isParentHeaderShown ? 0 : insets.top;\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    title: getHeaderTitle(options, route.name),\n    progress: progress,\n    insets: insets,\n    layout: layout,\n    modal: isModal,\n    headerBackTitle: options.headerBackTitle !== undefined ? options.headerBackTitle : previousTitle,\n    headerStatusBarHeight: statusBarHeight,\n    onGoBack: back ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});","map":{"version":3,"sources":["Header.tsx"],"names":["getHeaderTitle","HeaderShownContext","StackActions","useNavigationState","React","useSafeAreaInsets","debounce","ModalPresentationContext","HeaderSegment","memo","Header","back","layout","progress","options","route","navigation","styleInterpolator","insets","previousTitle","headerBackTitle","undefined","title","goBack","useCallback","isFocused","canGoBack","dispatch","pop","source","key","isModal","useContext","isParentHeaderShown","isFirstRouteInParent","state","routes","statusBarHeight","headerStatusBarHeight","top","name"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,EAAyBC,kBAAzB,QAAmD,4BAAnD;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,0BAAjD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAGA,OAAOC,QAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,aAAP;AAEA,eAAe,KAAK,CAACC,IAAN,CAAW,SAASC,MAAT,OAQL;EAAA,IAPnBC,IADwC,QACxCA,IADwC;IAExCC,MAFwC,QAExCA,MAFwC;IAGxCC,QAHwC,QAGxCA,QAHwC;IAIxCC,OAJwC,QAIxCA,OAJwC;IAKxCC,KALwC,QAKxCA,KALwC;IAMxCC,UANwC,QAMxCA,UANwC;IAOxCC,iBAAAA,QAAAA,iBAAAA;EAEA,IAAMC,MAAM,GAAGb,iBAAiB,EAAhC;EAEA,IAAIc,aAHe;EAOnB,IAAIL,OAAO,CAACM,eAARN,KAA4BO,SAAhC,EAA2C;IACzCF,aAAa,GAAGL,OAAO,CAACM,eAAxBD;EACD,CAFD,MAEO,IAAIR,IAAJ,EAAU;IACfQ,aAAa,GAAGR,IAAI,CAACW,KAArBH;EAViB;EAcnB,IAAMI,MAAM,GAAG,KAAK,CAACC,WAAN,CACblB,QAAQ,CAAC,YAAM;IACb,IAAIU,UAAU,CAACS,SAAXT,EAAAA,IAA0BA,UAAU,CAACU,SAAXV,EAA9B,EAAsD;MACpDA,UAAU,CAACW,QAAXX,iCACKd,YAAY,CAAC0B,GAAb1B,EADe;QAElB2B,MAAM,EAAEd,KAAK,CAACe;MAAAA,GAFhBd;IAID;EACF,CAPO,EAOL,EAPK,CADK,EASb,CAACA,UAAD,EAAaD,KAAK,CAACe,GAAnB,CATa,CAAf;EAYA,IAAMC,OAAO,GAAG3B,KAAK,CAAC4B,UAAN5B,CAAiBG,wBAAjBH,CAAhB;EACA,IAAM6B,mBAAmB,GAAG7B,KAAK,CAAC4B,UAAN5B,CAAiBH,kBAAjBG,CAA5B;EACA,IAAM8B,oBAAoB,GAAG/B,kBAAkB,CAC5CgC,UAAAA,KAAD;IAAA,OAAWA,KAAK,CAACC,MAAND,CAAa,CAAbA,CAAAA,CAAgBL,GAAhBK,KAAwBpB,KAAK,CAACe,GADI;EAAA,EAA/C;EAIA,IAAMO,eAAe,GACnBvB,OAAO,CAACwB,qBAARxB,KAAkCO,SAAlCP,GACIA,OAAO,CAACwB,qBADZxB,GAEKiB,OAAO,IAAI,CAACG,oBAAb,IAAsCD,mBAAtC,GACA,CADA,GAEAf,MAAM,CAACqB,GALb;EAOA,OACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMzB,OADN,EAAA;IAEE,KAAK,EAAEd,cAAc,CAACc,OAAD,EAAUC,KAAK,CAACyB,IAAhB,CAFvB;IAGE,QAAQ,EAAE3B,QAHZ;IAIE,MAAM,EAAEK,MAJV;IAKE,MAAM,EAAEN,MALV;IAME,KAAK,EAAEmB,OANT;IAOE,eAAe,EACbjB,OAAO,CAACM,eAARN,KAA4BO,SAA5BP,GACIA,OAAO,CAACM,eADZN,GAEIK,aAVR;IAYE,qBAAqB,EAAEkB,eAZzB;IAaE,QAAQ,EAAE1B,IAAI,GAAGY,MAAH,GAAYF,SAb5B;IAcE,iBAAiB,EAAEJ;EAdrB,CAAA,CAAA,CADF;AAkBD,CAjEc,CAAf","sourcesContent":["import { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions, useNavigationState } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type { StackHeaderProps } from '../../types';\nimport debounce from '../../utils/debounce';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport HeaderSegment from './HeaderSegment';\n\nexport default React.memo(function Header({\n  back,\n  layout,\n  progress,\n  options,\n  route,\n  navigation,\n  styleInterpolator,\n}: StackHeaderProps) {\n  const insets = useSafeAreaInsets();\n\n  let previousTitle;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n        });\n      }\n    }, 50),\n    [navigation, route.key]\n  );\n\n  const isModal = React.useContext(ModalPresentationContext);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const isFirstRouteInParent = useNavigationState(\n    (state) => state.routes[0].key === route.key\n  );\n\n  const statusBarHeight =\n    options.headerStatusBarHeight !== undefined\n      ? options.headerStatusBarHeight\n      : (isModal && !isFirstRouteInParent) || isParentHeaderShown\n      ? 0\n      : insets.top;\n\n  return (\n    <HeaderSegment\n      {...options}\n      title={getHeaderTitle(options, route.name)}\n      progress={progress}\n      insets={insets}\n      layout={layout}\n      modal={isModal}\n      headerBackTitle={\n        options.headerBackTitle !== undefined\n          ? options.headerBackTitle\n          : previousTitle\n      }\n      headerStatusBarHeight={statusBarHeight}\n      onGoBack={back ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}