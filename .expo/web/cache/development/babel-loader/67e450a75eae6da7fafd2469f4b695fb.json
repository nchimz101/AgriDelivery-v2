{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CustomDrawerContent from \"./../Menu\";\nimport AuthStack from \"./../AuthStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width;\nvar Drawer = createDrawerNavigator();\nexport default function PublicAppStack(props) {\n  return _jsx(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread(_objectSpread({}, props), {}, {\n        screens: [{\n          \"title\": \"Login\",\n          'link': \"Login\"\n        }]\n      }));\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOption: {\n      activeTintcolor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.75,\n        backgroundColor: \"transparent\",\n        paddingVertical: 16,\n        paddingHorizonal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        marginLeft: 12,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Login\",\n    children: _jsx(Drawer.Screen, {\n      name: \"Login\",\n      component: AuthStack\n    })\n  });\n}","map":{"version":3,"names":["React","createDrawerNavigator","CustomDrawerContent","AuthStack","Dimensions","get","width","Drawer","PublicAppStack","props","headerShown","flex","backgroundColor","activeTintcolor","inactiveTintColor","activeBackgroundColor","itemStyle","paddingVertical","paddingHorizonal","justifyContent","alignContent","alignItems","overflow","labelStyle","fontSize","marginLeft","fontWeight"],"sources":["C:/Users/munya/OneDrive/Desktop/.EXE/app2/navigation/VendorStacks/PublicAppStack.js"],"sourcesContent":["import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Easing, Animated, Dimensions } from \"react-native\";\n\n\n// drawer\nimport CustomDrawerContent from \"./../Menu\";\nimport AuthStack from \"./../AuthStack\"\n\nconst { width } = Dimensions.get(\"screen\");\nconst Drawer = createDrawerNavigator();\n\n\n\n\nexport default function  PublicAppStack(props) {\n    return (\n      <Drawer.Navigator\n        screenOptions={{headerShown: false}}\n        style={{ flex: 1 }}\n        drawerContent={props => <CustomDrawerContent {...props} screens={[\n          {\"title\":\"Login\",'link':\"Login\"},\n        ]} />}\n        drawerStyle={{\n          backgroundColor: \"white\",\n          width: width * 0.8\n        }}\n        drawerContentOption={{\n          activeTintcolor: \"white\",\n          inactiveTintColor: \"#000\",\n          activeBackgroundColor: \"transparent\",\n          itemStyle: {\n            width: width * 0.75,\n            backgroundColor: \"transparent\",\n            paddingVertical: 16,\n            paddingHorizonal: 12,\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\"\n          },\n          labelStyle: {\n            fontSize: 18,\n            marginLeft: 12,\n            fontWeight: \"normal\"\n          }\n        }}\n        initialRouteName=\"Login\"\n      >\n        <Drawer.Screen name=\"Login\" component={AuthStack} />\n      </Drawer.Navigator>\n    );\n  }"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAKjE,OAAOC,mBAAmB;AAC1B,OAAOC,SAAS;AAAsB;AAEtC,sBAAkBC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAAlCC,KAAK,mBAALA,KAAK;AACb,IAAMC,MAAM,GAAGN,qBAAqB,EAAE;AAKtC,eAAe,SAAUO,cAAc,CAACC,KAAK,EAAE;EAC3C,OACE,KAAC,MAAM,CAAC,SAAS;IACf,aAAa,EAAE;MAACC,WAAW,EAAE;IAAK,CAAE;IACpC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IACnB,aAAa,EAAE,uBAAAF,KAAK;MAAA,OAAI,KAAC,mBAAmB,kCAAKA,KAAK;QAAE,OAAO,EAAE,CAC/D;UAAC,OAAO,EAAC,OAAO;UAAC,MAAM,EAAC;QAAO,CAAC;MAChC,GAAG;IAAA,CAAC;IACN,WAAW,EAAE;MACXG,eAAe,EAAE,OAAO;MACxBN,KAAK,EAAEA,KAAK,GAAG;IACjB,CAAE;IACF,mBAAmB,EAAE;MACnBO,eAAe,EAAE,OAAO;MACxBC,iBAAiB,EAAE,MAAM;MACzBC,qBAAqB,EAAE,aAAa;MACpCC,SAAS,EAAE;QACTV,KAAK,EAAEA,KAAK,GAAG,IAAI;QACnBM,eAAe,EAAE,aAAa;QAC9BK,eAAe,EAAE,EAAE;QACnBC,gBAAgB,EAAE,EAAE;QACpBC,cAAc,EAAE,QAAQ;QACxBC,YAAY,EAAE,QAAQ;QACtBC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,EAAE;QACdC,UAAU,EAAE;MACd;IACF,CAAE;IACF,gBAAgB,EAAC,OAAO;IAAA,UAExB,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAC,SAAS,EAAEvB;IAAU;EAAG,EACnC;AAEvB"},"metadata":{},"sourceType":"module"}