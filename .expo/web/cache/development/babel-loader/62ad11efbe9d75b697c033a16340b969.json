{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Block, theme, Text } from \"galio-framework\";\nimport { Language } from \"../constants\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width;\nimport API from \"./../services/api\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LoadingIndicator } from 'react-native-expo-fancy-alerts';\nimport { NavigationEvents } from '@react-navigation/native';\nimport moment from \"moment\";\nimport config from \"./../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Notifications(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notificationsLoaded = _useState4[0],\n    setNotificationsLoaded = _useState4[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  var cardContainer = [styles.card, styles.shadow];\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    API.getNotifications(function (notificationsResponse) {\n      setNotifications(notificationsResponse);\n      setRefreshing(false);\n    });\n  }, [refreshing]);\n  function renderNotificationItem(item) {\n    return _jsx(Block, {\n      row: true,\n      card: true,\n      flex: true,\n      style: cardContainer,\n      children: _jsx(TouchableOpacity, {\n        children: _jsxs(Block, {\n          flex: true,\n          space: \"between\",\n          style: styles.cardDescription,\n          children: [_jsx(Text, {\n            bold: true,\n            style: styles.cardTitle,\n            children: item.data.title\n          }), _jsx(Text, {\n            bld: true,\n            style: styles.cardTitle,\n            children: item.data.body\n          }), _jsxs(Text, {\n            muted: true,\n            style: styles.cardTitle,\n            children: [Language.created + \": \", moment(item.created_at).format(config.dateTimeFormat)]\n          })]\n        })\n      })\n    });\n  }\n  useEffect(function () {\n    API.getNotifications(function (notificationsResponse) {\n      setNotifications(notificationsResponse);\n      setNotificationsLoaded(true);\n    });\n  }, []);\n  return _jsxs(Block, {\n    flex: true,\n    center: true,\n    style: styles.home,\n    children: [_jsx(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.articles,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: _jsxs(Block, {\n        flex: true,\n        children: [_jsx(Text, {\n          muted: true,\n          children: notificationsLoaded && notifications.length == 0 ? Language.noNotifications : \"\"\n        }), notifications.map(function (item) {\n          return renderNotificationItem(item);\n        })]\n      })\n    }), _jsx(LoadingIndicator, {\n      visible: !notificationsLoaded\n    })]\n  });\n}\nexport default Notifications;\nvar styles = StyleSheet.create({\n  cartCheckout: {\n    backgroundColor: \"white\"\n  },\n  listStyle: {\n    padding: theme.SIZES.BASE\n  },\n  home: {\n    width: width\n  },\n  articles: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE\n  },\n  actionButtons: {\n    backgroundColor: '#DCDCDC',\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom: 9.5,\n    borderRadius: 3,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 1\n  },\n  card: {\n    backgroundColor: theme.COLORS.WHITE,\n    marginVertical: theme.SIZES.BASE,\n    borderWidth: 0,\n    minHeight: 114,\n    marginBottom: 16\n  },\n  cardTitle: {\n    flex: 1,\n    flexWrap: 'wrap',\n    paddingBottom: 6\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 2\n  },\n  imageContainer: {\n    borderRadius: 3,\n    elevation: 1,\n    overflow: 'hidden',\n    resizeMode: \"cover\"\n  },\n  image: {\n  },\n\n  horizontalImage: {\n    height: 122,\n    width: 'auto'\n  },\n  horizontalStyles: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  verticalStyles: {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullImage: {\n    height: 200\n  },\n  shadow: {\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Block","theme","Text","Language","Dimensions","get","width","API","TouchableOpacity","LoadingIndicator","NavigationEvents","moment","config","Notifications","navigation","notifications","setNotifications","notificationsLoaded","setNotificationsLoaded","refreshing","setRefreshing","cardContainer","styles","card","shadow","onRefresh","useCallback","getNotifications","notificationsResponse","renderNotificationItem","item","cardDescription","cardTitle","data","title","body","created","created_at","format","dateTimeFormat","home","articles","length","noNotifications","map","StyleSheet","create","cartCheckout","backgroundColor","listStyle","padding","SIZES","BASE","paddingVertical","actionButtons","paddingHorizontal","paddingTop","paddingBottom","borderRadius","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","COLORS","WHITE","marginVertical","borderWidth","minHeight","marginBottom","flex","flexWrap","imageContainer","elevation","overflow","resizeMode","image","horizontalImage","horizontalStyles","borderTopRightRadius","borderBottomRightRadius","verticalStyles","borderBottomLeftRadius","fullImage","BLACK"],"sources":["C:/Users/munya/OneDrive/Desktop/.EXE/app2/screens/Notifications.js"],"sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n  RefreshControl\n} from \"react-native\";\nimport { Block, theme, Text, } from \"galio-framework\";\nimport {Language } from \"../constants\";\nconst { width, } = Dimensions.get(\"screen\");\nimport API from './../services/api'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LoadingIndicator } from 'react-native-expo-fancy-alerts';\nimport { NavigationEvents } from '@react-navigation/native';\nimport moment from \"moment\";\nimport config from \"./../config\";\n\nfunction Notifications({navigation}){\n    \n    const [notifications,setNotifications]=useState([]);\n    const [notificationsLoaded,setNotificationsLoaded]=useState(false);\n    const [refreshing, setRefreshing] = React.useState(false);\n    const cardContainer = [styles.card, styles.shadow];\n\n    const onRefresh = React.useCallback(() => {\n      setRefreshing(true);\n\n      API.getNotifications((notificationsResponse)=>{\n        setNotifications(notificationsResponse);\n        setRefreshing(false);\n      })\n    }, [refreshing]);\n\n\n    function renderNotificationItem(item){\n        return (\n        <Block row={true} card flex style={cardContainer}>\n          <TouchableOpacity>\n             <Block flex space=\"between\" style={styles.cardDescription}>\n                <Text bold style={styles.cardTitle}>{item.data.title}</Text>\n                <Text bld style={styles.cardTitle}>{item.data.body}</Text>\n                <Text muted  style={styles.cardTitle}>{Language.created+\": \"}{moment(item.created_at).format(config.dateTimeFormat)}</Text>\n            </Block>\n          </TouchableOpacity>\n           \n        </Block>)\n    }\n\n\n    useEffect(()=>{\n      API.getNotifications((notificationsResponse)=>{\n        setNotifications(notificationsResponse);\n        setNotificationsLoaded(true);\n      })\n  },[])\n\nreturn (\n    <Block flex center style={styles.home}>\n       <ScrollView\n            showsVerticalScrollIndicator={false}\n            contentContainerStyle={styles.articles}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n            >\n                <Block flex  >\n                    <Text muted>{notificationsLoaded&&notifications.length==0?Language.noNotifications:\"\"}</Text>\n                {\n                    notifications.map((item)=>{\n                        return renderNotificationItem(item)\n                    })\n                }\n                \n            </Block>\n        </ScrollView>\n        <LoadingIndicator  visible={!notificationsLoaded}/>\n    </Block>\n\n      \n    \n    \n)\n\n}\nexport default Notifications;\n\nconst styles = StyleSheet.create({\n    cartCheckout: {\n      backgroundColor:\"white\"\n      },\n      listStyle:{\n          padding:theme.SIZES.BASE,\n      },\n    home: {\n      width: width,    \n    },\n    articles: {\n      width: width - theme.SIZES.BASE * 2,\n      paddingVertical: theme.SIZES.BASE,\n    },\n    actionButtons:{\n  \n      //width: 100,\n      backgroundColor: '#DCDCDC',\n      paddingHorizontal: 16,\n      paddingTop: 10,\n      paddingBottom:9.5,\n      borderRadius: 3,\n      shadowColor: \"rgba(0, 0, 0, 0.1)\",\n      shadowOffset: { width: 0, height: 2 },\n      shadowRadius: 4,\n      shadowOpacity: 1,\n    \n    },\n    card: {\n      backgroundColor: theme.COLORS.WHITE,\n      marginVertical: theme.SIZES.BASE,\n      borderWidth: 0,\n      minHeight: 114,\n      marginBottom: 16\n    },\n    cardTitle: {\n      flex: 1,\n      flexWrap: 'wrap',\n      paddingBottom: 6\n    },\n    cardDescription: {\n      padding: theme.SIZES.BASE / 2\n    },\n    imageContainer: {\n      borderRadius: 3,\n      elevation: 1,\n      overflow: 'hidden',\n      resizeMode: \"cover\"\n    },\n    image: {\n      // borderRadius: 3,\n    },\n    horizontalImage: {\n      height: 122,\n      width: 'auto',\n    },\n    horizontalStyles: {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    verticalStyles: {\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    fullImage: {\n      height: 200\n    },\n    shadow: {\n      shadowColor: theme.COLORS.BLACK,\n      shadowOffset: { width: 0, height: 2 },\n      shadowRadius: 4,\n      shadowOpacity: 0.1,\n      elevation: 2,\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}