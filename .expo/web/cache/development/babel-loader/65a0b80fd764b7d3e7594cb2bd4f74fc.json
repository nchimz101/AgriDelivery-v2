{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useLogger } from \"../contexts\";\nimport { usePanResponder, useSlideAnimation, useViewDimensions } from \"../hooks\";\nimport { noop } from \"../utils/func\";\nimport { bound } from \"../utils/number\";\nimport { getTestId } from \"../utils/test-id\";\nimport { styles } from \"./AnimatedContainer.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function dampingFor(gesture, position) {\n  var moveY = gesture.moveY;\n  switch (position) {\n    case 'bottom':\n      {\n        var _Dimensions$get = Dimensions.get('screen'),\n          screenHeight = _Dimensions$get.height;\n        return Math.abs(screenHeight - moveY);\n      }\n    case 'top':\n      return Math.abs(moveY);\n    default:\n      throw new Error(\"Toast position: \" + position + \" not implemented\");\n  }\n}\nexport function animatedValueFor(gesture, position, damping) {\n  var boundValue = function boundValue(val) {\n    return bound(val, 0, 2);\n  };\n  var dy = gesture.dy;\n  switch (position) {\n    case 'bottom':\n      return boundValue(1 - dy / damping);\n    case 'top':\n      return boundValue(1 + dy / damping);\n    default:\n      throw new Error(\"Toast position: \" + position + \" not implemented\");\n  }\n}\nexport function AnimatedContainer(_ref) {\n  var children = _ref.children,\n    isVisible = _ref.isVisible,\n    position = _ref.position,\n    topOffset = _ref.topOffset,\n    bottomOffset = _ref.bottomOffset,\n    keyboardOffset = _ref.keyboardOffset,\n    onHide = _ref.onHide,\n    _ref$onRestorePositio = _ref.onRestorePosition,\n    onRestorePosition = _ref$onRestorePositio === void 0 ? noop : _ref$onRestorePositio;\n  var _useLogger = useLogger(),\n    log = _useLogger.log;\n  var _useViewDimensions = useViewDimensions(),\n    computeViewDimensions = _useViewDimensions.computeViewDimensions,\n    height = _useViewDimensions.height;\n  var _useSlideAnimation = useSlideAnimation({\n      position: position,\n      height: height,\n      topOffset: topOffset,\n      bottomOffset: bottomOffset,\n      keyboardOffset: keyboardOffset\n    }),\n    animatedValue = _useSlideAnimation.animatedValue,\n    animate = _useSlideAnimation.animate,\n    animationStyles = _useSlideAnimation.animationStyles;\n  var onDismiss = React.useCallback(function () {\n    log('Swipe, dismissing');\n    animate(0);\n    onHide();\n  }, [animate, log, onHide]);\n  var onRestore = React.useCallback(function () {\n    log('Swipe, restoring to original position');\n    animate(1);\n    onRestorePosition();\n  }, [animate, log, onRestorePosition]);\n  var computeNewAnimatedValueForGesture = React.useCallback(function (gesture) {\n    var damping = dampingFor(gesture, position);\n    var newAnimatedValue = animatedValueFor(gesture, position, damping);\n    return newAnimatedValue;\n  }, [position]);\n  var _usePanResponder = usePanResponder({\n      animatedValue: animatedValue,\n      computeNewAnimatedValueForGesture: computeNewAnimatedValueForGesture,\n      onDismiss: onDismiss,\n      onRestore: onRestore\n    }),\n    panResponder = _usePanResponder.panResponder;\n  React.useLayoutEffect(function () {\n    var newAnimationValue = isVisible ? 1 : 0;\n    animate(newAnimationValue);\n  }, [animate, isVisible]);\n  return _jsx(Animated.View, _objectSpread(_objectSpread({\n    testID: getTestId('AnimatedContainer'),\n    onLayout: computeViewDimensions,\n    style: [styles.base, styles[position], animationStyles],\n    pointerEvents: \"box-none\"\n  }, panResponder.panHandlers), {}, {\n    children: children\n  }));\n}","map":{"version":3,"names":["React","useLogger","usePanResponder","useSlideAnimation","useViewDimensions","noop","bound","getTestId","styles","dampingFor","gesture","position","moveY","Dimensions","get","screenHeight","height","Math","abs","Error","animatedValueFor","damping","boundValue","val","dy","AnimatedContainer","children","isVisible","topOffset","bottomOffset","keyboardOffset","onHide","onRestorePosition","log","computeViewDimensions","animatedValue","animate","animationStyles","onDismiss","useCallback","onRestore","computeNewAnimatedValueForGesture","newAnimatedValue","panResponder","useLayoutEffect","newAnimationValue","base","panHandlers"],"sources":["C:/Users/munya/OneDrive/Desktop/.EXE/app2/node_modules/react-native-toast-message/lib/src/components/AnimatedContainer.js"],"sourcesContent":["import React from 'react';\nimport { Animated, Dimensions } from 'react-native';\nimport { useLogger } from '../contexts';\nimport { usePanResponder, useSlideAnimation, useViewDimensions } from '../hooks';\nimport { noop } from '../utils/func';\nimport { bound } from '../utils/number';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './AnimatedContainer.styles';\n/**\n * Produces a positive damping value.\n *\n * To note: `moveY` becomes negative when going off-screen. By making sure the value\n * produced is always positive, we avoid issues like: https://github.com/calintamas/react-native-toast-message/issues/280\n */\nexport function dampingFor(gesture, position) {\n    const { moveY } = gesture;\n    switch (position) {\n        case 'bottom': {\n            const { height: screenHeight } = Dimensions.get('screen');\n            return Math.abs(screenHeight - moveY);\n        }\n        case 'top':\n            return Math.abs(moveY);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function animatedValueFor(gesture, position, damping) {\n    const boundValue = (val) => bound(val, 0, 2);\n    const { dy } = gesture;\n    switch (position) {\n        case 'bottom':\n            return boundValue(1 - dy / damping);\n        case 'top':\n            return boundValue(1 + dy / damping);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function AnimatedContainer({ children, isVisible, position, topOffset, bottomOffset, keyboardOffset, onHide, onRestorePosition = noop }) {\n    const { log } = useLogger();\n    const { computeViewDimensions, height } = useViewDimensions();\n    const { animatedValue, animate, animationStyles } = useSlideAnimation({\n        position,\n        height,\n        topOffset,\n        bottomOffset,\n        keyboardOffset\n    });\n    const onDismiss = React.useCallback(() => {\n        log('Swipe, dismissing');\n        animate(0);\n        onHide();\n    }, [animate, log, onHide]);\n    const onRestore = React.useCallback(() => {\n        log('Swipe, restoring to original position');\n        animate(1);\n        onRestorePosition();\n    }, [animate, log, onRestorePosition]);\n    const computeNewAnimatedValueForGesture = React.useCallback((gesture) => {\n        const damping = dampingFor(gesture, position);\n        const newAnimatedValue = animatedValueFor(gesture, position, damping);\n        return newAnimatedValue;\n    }, [position]);\n    const { panResponder } = usePanResponder({\n        animatedValue,\n        computeNewAnimatedValueForGesture,\n        onDismiss,\n        onRestore\n    });\n    React.useLayoutEffect(() => {\n        const newAnimationValue = isVisible ? 1 : 0;\n        animate(newAnimationValue);\n    }, [animate, isVisible]);\n    return (<Animated.View testID={getTestId('AnimatedContainer')} onLayout={computeViewDimensions} style={[styles.base, styles[position], animationStyles]} \n    // This container View is never the target of touch events but its subviews can be.\n    // By doing this, tapping buttons behind the Toast is allowed\n    pointerEvents='box-none' {...panResponder.panHandlers}>\n      {children}\n    </Animated.View>);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}